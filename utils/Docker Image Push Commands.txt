USEFUL COMMANDS-GENERAL

1. docker run -d python #run engine in detached mode 
3. docker logs {container ID} #See what logs on container
4. docker ps #check ports running in the containers (list running containers)
5. docker stop {container ID} -or use the actual name instead of id
6. docker run -d -p 9000(host machine port you wanna use):80(port app running in) python #port binding for communication
7. docker ps -a #Gives all containers both that stopped and ones running
8. docker run --name dyu_french_trans -d -p 9000:80 python #rename the container
10. docker images
11. docker run --name dyu_french -d -p 8080:8080 83a22b838466
12. docker scout quickview  # View a summary of image vulnerabilities and recommendations
13. docker stats 7670305e61170819f11c65f3c802a9e0b2081cae5a3bf6b0c000a047fe0a277f

USEFUL COMMANDS-SPECIFIC MELIO
1. docker build -t dyu_french:1.3 . #build an image with the tag and you must be in the folder(.) where the dockerfile is 
2. docker build --no-cache -t dyu_french:1.3 . #no cache building


SELF ASSESSMENT 1

docker compose build # only needed if you make changes to docker
docker compose up -d
docker compose down #tear down local evaluation

OR 

apt-get update && apt-get install -y curl
curl -X POST http://localhost:8000/translate -H "Content-Type: application/json" -d '{
    "inputs": [
        {
            "name": "input-0",
            "shape": [1],
            "datatype": "BYTES",
            "parameters": null,
            "data": ["i tɔgɔ bi cogodɔ"]
        }
    ]
}'


SELF ASSESSMENT 2

$env:ZINDI_SELF_ASSESS_IMAGE = "melioconsulting/zindi-self-assess:latest" #get image
docker tag $env:ZINDI_SELF_ASSESS_IMAGE zindi-self-assess:latest #renaming
docker image ls #check it is there
docker run --rm -p 8000:8000 zindi-self-assess:latest #start fastaapi server for self assessment

ESTIMATED VALUES FOR EACH CATEGORY

$body=@{
"bleu"=35
"latency"=500
"memory"=0.7
"cpu"=0.7
"image_size"=3
"code_quality"=0.6
} | ConvertTo-Json

$response=Invoke-WebRequest -Uri 'http://localhost:8000/evaluate/' -Method POST -Body $body -ContentType 'application/json' #INVOKE REQUEST
$responseObject = $response.Content | ConvertFrom-Json
$responseObject | ConvertTo-Json -Depth 10

OR GO TO BROWSER 

Type: http://localhost:8000/docs
Then execute this :
{
"bleu":35,
"latency":500,
"memory":0.7,
"cpu":0.7,
"image_size":3,
"code_quality":0.6
}


NOT LOCAL NOW GOING HIGHWIND

1. $token="eyJw..(COPY)"
2. $authString = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("AWS:$token"))
3.$authString


4.Paste this string inside the auth dict of docker configs: 	"auths": {
		"https://058264459447.dkr.ecr.eu-west-1.amazonaws.com/": {
			"auth": "LONGCODE"		}}
-yOU MIGHT NEED TO DELETE THE CREDENTIAL DESTKTOP FILE
4.docker pull https://058264459447.dkr.ecr.eu-west-1.amazonaws.com/dyu_french:1.2
5.docker login -u AWS https://058264459447.dkr.ecr.eu-west-1.amazonaws.com -p...(COPY)

6.docker build -t dyu_french:1.1 . #no cache building-do not do this you already if you did already

7.docker tag dyu_french:1.4 058264459447.dkr.ecr.eu-west-1.amazonaws.com/highwind/..(COPY)

8. docker push 058264459447.dkr.ecr.eu-west-1.amazonaws.com/highwind/..(COPY)

./workspace/model_dir replace with model_dir200_v2 #replacing config.json

#CHECK DOCKER DETAILS FOR SLIMMING
docker history a3a1730214b2 # used id of image to see layers
1. docker run -it -p 8000:8000 --entrypoint "/bin/bash" dyula-fr-joeynmt200_v2
2. du -h --max-depth
3. du -h --max-depth=1 /usr
4. du -ah /usr | sort -rh | head -n 20
5. du -ah /usr/local/lib | sort -rh | head -n 20
du --apparent-size -ah /usr/local/lib/python3.11/site-packages/torch | sort -rh | head -n 20
find /usr/local/lib/python3.11/site-packages/torch -type f -links +1 -exec ls -l {} \;
5. find /usr -type f -exec du -h {} + | sort -rh | head -n 20
6. rm -rf /usr/local/lib/python3.11/site-packages/plotly  #REMOVE E.G. plotly IF NOT IN USEFUL
7. du -sh /usr/local/lib/python3.11 # Check if indeed was removed

8. docker exec -it translation_inference_util /bin/bash 
8. ls -la ~/.cache/pip
8. ls -la /root/.cache/pip
8. pip cache purge
9. pip list  #check all installed libraries
10. pip show joeynmt #show depedencies of joeynmt
11. pip uninstall pyarrow # unistall a dependency required by joeynmt
12. docker commit translation_inference_util dyula-fr-joeynmt200_v2_slim
13. exit


PROFILING
pip install snakeviz
python -m snakeviz profile_output.prof
Style the .py file such that it uses cprofile


VIRTUAL ENVIRONMENT
#Set-ExecutionPolicy RemoteSigned #-run on powershell as admin (allows to use Scripts)
# Step 1: Create and activate a virtual environment
python -m venv fairseq_env

# Step 2: Activate the virtual environment
# On Windows
fairseq_env\Scripts\activate

# Step 3: Upgrade pip
pip install --upgrade "pip<24.1"

# Step 4: Install required packages
pip install -q sentencepiece sacrebleu sacremoses

# Step 5: Clone Fairseq repository
git clone https://github.com/pytorch/fairseq
cd fairseq

# Step 6: Install Fairseq
pip install --editable ./
cd ..
# python new_env.py



